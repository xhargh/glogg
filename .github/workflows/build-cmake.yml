name: "CI: Build Test"

on: [push, pull_request]

jobs:
  build:

    strategy:
      fail-fast: false
      matrix:
        qt_version: [5.14.0]
        config:
          - os: ubuntu
            cc: gcc-8
            cxx: g++-8
            arch: x64

          - os: macos
            cc: clang
            cxx: clang++
            arch: x64

          - os: windows
            cc: cl
            cxx: cl
            arch: x64

          - os: windows
            cc: cl
            cxx: cl
            arch: x86


    runs-on: ${{ matrix.config.os }}-latest

    steps:
    - uses: actions/checkout@v2
    - uses: seanmiddleditch/gha-setup-ninja@master

    - name: Prepare dev cmd
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: ${{ matrix.config.arch }}

    - name: Prepare compiler env
      run: |
        echo "::set-env name=CC::${{ matrix.config.cc }}"
        echo "::set-env name=CXX::${{ matrix.config.cxx }}"

    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v1
      with:
        path: ../Qt
        key: ${{ matrix.config.os }}-${{ matrix.config.arch }}-QtCache

    - name: Install Qt x86
      if: ${{ matrix.config.arch == 'x86' }} 
      uses: jurplel/install-qt-action@v2
      with:
        version: ${{ matrix.qt_version }}
        arch: win32_msvc2017
        cached: ${{ steps.cache-qt.outputs.cache-hit }}

    - name: Install Qt x64
      if: ${{ matrix.config.arch == 'x64' }} 
      uses: jurplel/install-qt-action@v2
      with:
        version: ${{ matrix.qt_version }}
        cached: ${{ steps.cache-qt.outputs.cache-hit }}

    - name: cmake
      run: |
        mkdir build
        cd build
        cmake -G Ninja -DCMAKE_BUILD_TYPE=Release ..

    - name: cmake build klogg-io
      run: |
        cmake --build build -t klogg-io
        cmake --build build -t klogg_io_portable

    - name: cmake build tests
      run: |
        cmake --build build -t file_write_helper
        cmake --build build -t klogg_tests
        cmake --build build -t klogg_itests

    - name: cmake test
      run: |
        cd build
        ctest -R klogg_io_smoke
