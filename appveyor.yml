version: '20.9.0.{build}'
skip_tags: true

os: Visual Studio 2019

platform:
  - x64
  - x86

configuration:
  - Release

environment:
  QTDIR64: C:\Qt\5.15\msvc2019_64
  QTDIR32: C:\Qt\5.15\msvc2019
  SSL_DIR_64: C:\OpenSSL-v111-Win64\bin
  SSL_DIR_32: C:\OpenSSL-v111-Win32\bin
  CMAKE_GENERATOR_NAME: Ninja
  CMAKE_BUILD_TYPE: RelWithDebInfo
  GITHUB_RELEASE_TAG: continuous-win
  GITHUB_TOKEN:
      secure: +YCbYxqzyLV57jhslXRatlbk1eMU2wJptb+YmcaxdFXO7B+TaCNpym1AdoOKrTid
  GITHUB_RELEASE_TAG: continuous-win
  NINJA_URL: https://github.com/ninja-build/ninja/releases/download/v1.9.0/ninja-win.zip

matrix:
    allow_failures:
    - platform: x86

install:
  - appveyor DownloadFile %NINJA_URL% -FileName ninja.zip
  - 7z x ninja.zip -o%APPVEYOR_BUILD_FOLDER%\ninja > nul
  - set PATH=%APPVEYOR_BUILD_FOLDER%\ninja;%PATH%
  - ninja --version
  - ps: >-
      if($env:platform -eq 'x64') {
          $githubApi = 'https://api.github.com/repos/xhargh/klogg-io'
          $headers = @{
            "Authorization" = "token $env:GITHUB_TOKEN"
            "Content-type" = "application/json"
          }
          $releaseTag = $env:GITHUB_RELEASE_TAG
          $release = Invoke-RestMethod -Method Get -Uri "$githubApi/releases/tags/$releaseTag" -Headers $headers

          echo $release
          echo $release.id
      }

before_build:
- if %platform%==x64 (set QTDIR=%QTDIR64%) else (set QTDIR=%QTDIR32%)
- if %platform%==x64 (set SSL_DIR=%SSL_DIR_64%) else (set SSL_DIR=%SSL_DIR_32%)
- if %platform%==x64 (set SSL_ARCH="-x64") else (set SSL_ARCH="")
- '%QTDIR%\bin\qtenv2.bat'
- call "%ProgramFiles(x86)%\Microsoft Visual Studio\2019\Community\Common7\Tools\vsdevcmd" -arch=%platform%
- set PATH=%ProgramFiles(x86)%\NSIS;%PATH%
- md %APPVEYOR_BUILD_FOLDER%\build
- cd %APPVEYOR_BUILD_FOLDER%\build
- cmake  -G "%CMAKE_GENERATOR_NAME%" -DCMAKE_BUILD_TYPE=%CMAKE_BUILD_TYPE% -DBUILD_NUMBER=%APPVEYOR_BUILD_NUMBER% %APPVEYOR_BUILD_FOLDER%

build_script:
  - cmake --build . -t ci_build

test_script:
  - cmd: cd %APPVEYOR_BUILD_FOLDER%\build
  - cmd: ctest --verbose

after_test:
- cd %APPVEYOR_BUILD_FOLDER%
- scripts\win\prepare_release.cmd

- 7z a klogg-io-%APPVEYOR_BUILD_VERSION%-%PLATFORM%-portable.7z -r @scripts\win\7z_dll_listfile.txt
- 7z a klogg-io-%APPVEYOR_BUILD_VERSION%-%PLATFORM%-portable.7z @scripts\win\7z_klogg_listfile.txt

- 7z a klogg-io-%APPVEYOR_BUILD_VERSION%-%PLATFORM%-pdb.7z @scripts\win\7z_pdb_listfile.txt

- makensis -DVERSION=%APPVEYOR_BUILD_VERSION% -DPLATFORM=%PLATFORM%  klogg-io.nsi

artifacts:
  - path: klogg-io-%APPVEYOR_BUILD_VERSION%-%PLATFORM%-portable.zip
    name: klogg_io_portable
  - path: klogg-io-%APPVEYOR_BUILD_VERSION%-%PLATFORM%-setup.exe
    name: klogg_io_installer
  - path: klogg-io-%APPVEYOR_BUILD_VERSION%-%PLATFORM%-pdb.7z
    name: klogg_symbols



before_deploy:
- ps: >-
    if($env:platform -eq 'x64') {
        $githubApi = 'https://api.github.com/repos/xhargh/klogg-io'
        $headers = @{
          "Authorization" = "token $env:GITHUB_TOKEN"
          "Content-type" = "application/json"
        }
        $releaseTag = $env:GITHUB_RELEASE_TAG
        $release = Invoke-RestMethod -Method Get -Uri "$githubApi/releases/tags/$releaseTag" -Headers $headers

        $releaseId = $release.id
        echo "Deleting release: $releaseId"

        Invoke-RestMethod -Method Delete -Uri "$githubApi/releases/$releaseId" -Headers $headers

        echo "Deleting tag: $releaseTag"

        Invoke-RestMethod -Method Delete -Uri "$githubApi/git/refs/tags/$releaseTag" -Headers $headers
    }

deploy:
- provider: GitHub
  tag: $(GITHUB_RELEASE_TAG)
  release: Continuous build (win)
  description: 'Appveyor build: https://ci.appveyor.com/project/xhargh/klogg-io/builds/$(appveyor_build_id)'
  auth_token:
    secure: +YCbYxqzyLV57jhslXRatlbk1eMU2wJptb+YmcaxdFXO7B+TaCNpym1AdoOKrTid
  artifact: klogg_io_portable, klogg_io_installer, klogg_symbols
  prerelease: true
  force_update: true
  on:
    branch: master
